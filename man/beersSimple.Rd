% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Beers.R
\name{beersSimple}
\alias{beersSimple}
\title{the ordinary modified Beers splitting methods}
\usage{
beersSimple(popmat, Age, OAG = FALSE, method = "mod", johnson = FALSE,
  Age0)
}
\arguments{
\item{popmat}{a numeric matrix of population counts in 5-year age groups, with integer-labeled 
margins (age in rows and year in columns).}

\item{Age}{integer vector. Lower age bound of age groups. Detected from row names of \code{popmat} if missing.}

\item{OAG}{logical (default \code{TRUE}. Is the final age group open?}

\item{method}{character (default \code{"mod"}). Options are presently \code{"mod"} and \code{"ord"}.}

\item{johnson}{logical (deault \code{FALSE}). Do we want to adjust young ages according to the DAPPS method?}

\item{Age0}{numeric. If doing the \code{johnson} adjustment, we need a separate estimate of age 0. Taken from \code{popmat} if missing.}
}
\value{
an age-period matrix od split population counts with the same number of 
columns as \code{popmat}, and single ages in rows.
}
\description{
This method offers both ordinary and modified Beers splitting, 
with an optional DAPPS adjustment \code{johnson} for ages under 10.
}
\details{
Ages should refer to lower age bounds. 
The rows of \code{popmat} must be labelled with ages unless \code{Age} is given separately.
 There must be at least six 5-year age groups (including the open group, 5 otherwise). One year of data will 
work as well, as long as it's given as a single-column matrix. If you want the \code{johnson} adjustment of young 
ages, a separate estimate of \code{Age0} can either be specified directly, or else it is taken from age 0 if \code{popmat} 
is specified in single or standard abridged ages.
}
\examples{
p5 <- structure(c(54170, 44775, 42142, 38464, 34406, 30386, 26933, 
				23481, 20602, 16489, 14248, 9928, 8490, 4801, 3599, 2048, 941, 
				326, 80, 17, 0, 57424, 44475, 41752, 39628, 34757, 30605, 27183, 
				23792, 20724, 17056, 14059, 10585, 8103, 5306, 3367, 2040, 963, 
				315, 80, 16, 1, 60272, 44780, 41804, 40229, 35155, 30978, 27456, 
				24097, 20873, 17546, 13990, 11146, 7841, 5738, 3184, 2062, 961, 
				311, 80, 15, 1, 62727, 45681, 42101, 40474, 35599, 31439, 27758, 
				24396, 21055, 17958, 14046, 11589, 7731, 6060, 3086, 2083, 949, 
				312, 79, 14, 1, 64816, 47137, 42508, 40532, 36083, 31940, 28092, 
				24693, 21274, 18299, 14223, 11906, 7785, 6255, 3090, 2084, 938, 
				316, 80, 14, 2), 
		.Dim = c(21L, 5L), 
		.Dimnames = list(seq(0,100,by=5), 1950:1954))
head(p5) # this is the entire matrix
p1 <- beersSimple(p5, OAG = FALSE)
head(p1)
# note some negatives in high ages
tail(p1) 
colSums(p1) - colSums(p5) 

# another case, starting with single ages
# note beersSimple() groups ages. 
Value <- c(9544406,7471790,11590109,11881844,11872503,12968350,11993151,10033918,
		14312222,8111523,15311047,6861510,13305117,7454575,9015381,10325432,
		9055588,5519173,12546779,4784102,13365429,4630254,9595545,4727963,
		5195032,15061479,5467392,4011539,8033850,1972327,17396266,1647397,
		6539557,2233521,2101024,16768198,3211834,1923169,4472854,
		1182245,15874081,1017752,3673865,1247304,1029243,12619050,1499847,
		1250321,2862148,723195,12396632,733501,2186678,777379,810700,
		7298270,1116032,650402,1465209,411834,9478824,429296,1190060,
		446290,362767,4998209,388753,334629,593906,178133,
		4560342,179460,481230,159087,155831,1606147,166763,93569,182238,
		53567,1715697,127486,150782,52332,48664,456387,46978,34448,
		44015,19172,329149,48004,28574,9200,7003,75195,13140,5889,
		18915,21221,72373)
Age          <- 0:100
names(Value) <- Age
ord1 <-  beersSimple(Value, OAG = TRUE, method = "ord")
mod1 <- beersSimple(Value, OAG = TRUE, method = "mod")
\dontrun{
plot(Age,Value)
lines(Age, ord1)
lines(Age, mod1)
}

# notice this negative value. Yuck! 
tail(mod1)
# this replaces ages 90+, guaranteed no negatives.
monoCloseout(Value, pops = mod1, OAG = TRUE)
# Note: there are no kludges built into beersSimple() to handle such cases.
# these ought to be handled by wrappers as appropriate.

# This replicates Johnson_2016_BEERSP.XLS, males
M <- c(752124,582662,463534,369976,286946,235867,
		199561,172133,151194,131502,113439,95614,
		78777,60157,40960,21318,25451)
dim(M)      <- c(length(M),1)
rownames(M) <- seq(0,80,by=5)
Age0        <- 184499
johnson     <- beersSimple(
		         popmat = M, 
		         OAG = TRUE,
			     method = "ord", 
			     johnson = TRUE, 
			     Age0 = Age0)
# copied from spreadsheet output, a de facto unit test, 
output <- c(184499,158163,143895,135416,130151,
            126153,122028,117182,111566,105733,
			101088,96719,92551)
# allow for rounding differences, so maximum absolute 
# difference of 1
stopifnot(max(abs(round(johnson)[1:length(output)] - output)) == 1)
}
\references{
\insertRef{beers1945modified}{DemoTools}
\insertRef{shryock1973methods}{DemoTools}
\insertRef{siegel2004methods}{DemoTools}
\insertRef{stover2008spectrum}{DemoTools}
}
