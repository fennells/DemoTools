% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sprague.R
\name{splitOscillate}
\alias{splitOscillate}
\title{an oscillatory average of age splits}
\usage{
splitOscillate(Value, Age = 1:length(Value) - 1, OAG = TRUE,
  splitfun = spragueSimple, ...)
}
\arguments{
\item{Value}{numeric vector of single age counts}

\item{Age}{integer vector of single ages (lower bound)}

\item{OAG}{logical (default \code{TRUE}). Is the last value the open age group?}

\item{splitfun}{function used to split at each digit grouping (default \code{spragueSimple()}.}

\item{...}{optional arguments passed to \code{splitfun()}.}
}
\value{
numeric vector of Sprague-smoothed counts
}
\description{
Single ages can be grouped into 5-year age groups in 5 ways by staggering terminal digits.
This method is a bit smoother than the standard Sprague or Beers methods, but not as smooth as \code{grabill()}.
}
\details{
This function works on a single vector of single-age counts, not on a matrix. Results are not
constrained to any particular age group, but are constrained to the total count. Negatives, \code{NA}, or \code{NaN} 
values are ignored in averaging. This can happen in older ages . It is recommended to run \code{monoCloseout()} or 
similar after the oscillatory split in such situations.
}
\examples{
Value <- structure(c(9544406, 7471790, 11590109, 11881844, 11872503, 12968350, 
		 11993151, 10033918, 14312222, 8111523, 15311047, 6861510, 13305117, 
		 7454575, 9015381, 10325432, 9055588, 5519173, 12546779, 4784102, 
		 13365429, 4630254, 9595545, 4727963, 5195032, 15061479, 5467392, 
		 4011539, 8033850, 1972327, 17396266, 1647397, 6539557, 2233521, 
		 2101024, 16768198, 3211834, 1923169, 4472854, 1182245, 15874081, 
		 1017752, 3673865, 1247304, 1029243, 12619050, 1499847, 1250321, 
		 2862148, 723195, 12396632, 733501, 2186678, 777379, 810700, 7298270, 
		 1116032, 650402, 1465209, 411834, 9478824, 429296, 1190060, 446290, 
		 362767, 4998209, 388753, 334629, 593906, 178133, 4560342, 179460, 
		 481230, 159087, 155831, 1606147, 166763, 93569, 182238, 53567, 
		 1715697, 127486, 150782, 52332, 48664, 456387, 46978, 34448, 
		 44015, 19172, 329149, 48004, 28574, 9200, 7003, 75195, 13140, 
		 5889, 18915, 21221, 72373), .Names = 0:100)
#barplot(Value, main = "yup, these have heaping!")
# this is the basic case we compare with:
pop0    <- spragueSimple(groupAges(Value),  OAG = TRUE)
# note: this function needs single ages to work because
# ages are grouped into 5-year age groups in 5 different ways.
pop1    <- splitOscillate(Value, OAG = TRUE, splitfun = spragueSimple)
pop2    <- splitOscillate(Value, OAG = TRUE, splitfun = beersSimple)
# what's smoother, splitOscillate() or grabill()?
# note, same closeout problem, can be handled by monoCloseout()
pop3    <- grabill(Value, OAG = TRUE)
# and technically you could give grabill as splitfun too
pop4   <- splitOscillate(Value, OAG = TRUE, splitfun = grabill)
\dontrun{
Age <- 0:100
plot(Age, Value)
lines(Age, pop0, col = "blue")
# slightly smoother (also shifted though)
lines(Age, pop1)
# only different at very high ages, small nrs
lines(Age, pop2, col = "red", lty = 2, lwd = 2) 
lines(Age, pop3, col = "magenta")
lines(Age, pop4, col = "orange", lty = 2)
legend("topright", 
lty = c(1,1,2,1,2), 
lwd = c(1,1,2,1,1), 
col = c("blue","black","red","magenta","orange"),
		legend = c("spragueSimple()",
                "splitOscillate(splitfun = spragueSimple)", 
				   "splitOscillate(splitfun = beersSimple)",
				   "grabill()",
                "splitOscillate(splitfun = grabill)"))
}
# index of dissimilarity
ID(Value, pop0) # original vs sprague
ID(pop0,pop1) # sprague vs sprague osc
ID(pop1,pop2) # sprague osc vs beers osc
ID(pop2,pop3) # beersSimple osc vs grabill
ID(pop3,pop4) # grabill vs grabill osc
# measre of smoothness:
mean(abs(diff(Value)))
mean(abs(diff(pop0)))
mean(abs(diff(pop1)))
mean(abs(diff(pop2)))
mean(abs(diff(pop3)))
mean(abs(diff(pop4)))
}
\references{
\insertRef{booth2015demographic}{DemoTools}
}
